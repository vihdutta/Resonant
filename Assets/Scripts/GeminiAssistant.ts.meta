- !<AssetImportMetadata/1fbaaa8b-f1c1-48f0-a63d-f701a26bb84d>
  ImportedAssetIds:
    TypeScriptAsset: !<reference> 54099172-e311-4b2a-9536-8be605a7d7be
  ImporterName: TypeScriptAssetImporter
  PrimaryAsset: !<reference> 54099172-e311-4b2a-9536-8be605a7d7be
  PackageType: NotAPackage
  PackagePolicy: CannotBeUnpacked
  ExtraData:
    {}
  AssetDataMap:
    TypeScriptAsset: !<own> 03b3df2f-3aca-4a44-849c-ce9f9f8a1b5a
  DependentFiles:
    []
  ImporterSettings: !<AssetImporterSettings>
    {}
  CompressionSettings: !<own> 00000000-0000-0000-0000-000000000000
- !<TypeScriptAssetData/03b3df2f-3aca-4a44-849c-ce9f9f8a1b5a>
  SvgIcon: ""
  SetupScript:
    code: ""
  Description: ""
  VersionMajor: 0
  VersionMinor: 0
  VersionPatch: 0
  ComponentUid: 0bf2883a-3382-4998-a0ca-6086cbce980d
  ExportUid: 00000000-0000-0000-0000-000000000000
  CurrentVisibility: Editable
  MaxVisibility: Editable
  ScriptInputsHidden:
    dynamicAudioOutput: false
    enableDebugLogging: false
    enablePeriodicOutput: false
    haveAudioOutput: false
    haveVideoInput: false
    instructions: false
    microphoneRecorder: false
    periodicInstructions: false
    periodicMethod: false
    periodicOutputInterval: false
    textComponent: false
    voice: false
    websocketRequirementsObj: false
  ScriptTypesHidden:
    {}
  ReadMe: !<reference> 00000000-0000-0000-0000-000000000000
  DeclarationFile: !<reference> 00000000-0000-0000-0000-000000000000
  DefaultScriptInputs:
    - websocketRequirementsObj: !<reference.SceneObject> 00000000-0000-0000-0000-000000000000
      dynamicAudioOutput: !<MappingBased.AssignableType> 00000000-0000-0000-0000-000000000000
      microphoneRecorder: !<MappingBased.AssignableType_1> 00000000-0000-0000-0000-000000000000
      instructions: You are a helpful assistant that loves to make puns
      haveVideoInput: false
      haveAudioOutput: false
      voice: Puck
      enablePeriodicOutput: false
      periodicOutputInterval: !<float> 5.000000
      periodicInstructions: Provide a brief update or insight based on current context
      periodicMethod: text
      enableDebugLogging: true
      textComponent: !<reference.Text> 00000000-0000-0000-0000-000000000000
  ScriptTypes:
    -
      {}
  InputLines:
    - '// @ui {"widget":"separator"}'
    - '// @ui {"widget":"label", "label":"Example of connecting to the Gemini Live API. Change various settings in the inspector to customize!"}'
    - '// @ui {"widget":"separator"}'
    - '// @ui {"widget":"separator"}'
    - '// @ui {"widget":"group_start", "label":"Setup"}'
    - // @input SceneObject websocketRequirementsObj
    - // @input AssignableType dynamicAudioOutput
    - // @input AssignableType_1 microphoneRecorder
    - '// @ui {"widget":"group_end"}'
    - '// @ui {"widget":"separator"}'
    - '// @ui {"widget":"group_start", "label":"Inputs"}'
    - '// @input string instructions = "You are a helpful assistant that loves to make puns" {"widget":"text_area"}'
    - // @input bool haveVideoInput
    - '// @ui {"widget":"group_end"}'
    - '// @ui {"widget":"separator"}'
    - '// @ui {"widget":"group_start", "label":"Outputs"}'
    - '// @ui {"widget":"label", "label":"<span style=\"color: yellow;\">⚠️ To prevent audio feedback loop in Lens Studio Editor, use headphones or manage your microphone input.</span>"}'
    - // @input bool haveAudioOutput
    - '// @input string voice = "Puck" {"widget":"combobox", "values":[{"label":"Puck", "value":"Puck"}, {"label":"Charon", "value":"Charon"}, {"label":"Kore", "value":"Kore"}, {"label":"Fenrir", "value":"Fenrir"}, {"label":"Aoede", "value":"Aoede"}, {"label":"Leda", "value":"Leda"}, {"label":"Orus", "value":"Orus"}, {"label":"Zephyr", "value":"Zephyr"}], "showIf":"haveAudioOutput", "showIfValue":true}'
    - '// @ui {"widget":"group_end"}'
    - '// @ui {"widget":"separator"}'
    - '// @ui {"widget":"group_start", "label":"Periodic Output"}'
    - // @input bool enablePeriodicOutput
    - '// @input float periodicOutputInterval = 10 {"showIf":"enablePeriodicOutput", "showIfValue":true}'
    - '// @input string periodicInstructions = "You are monitoring a party crowd through sound and contextual signals. Your role is to analyze the crowd’s hype and energy in real time and provide **mandatory updates every 6 seconds without fail** to the user who is the DJ. You must never pause, delay, or skip an update. Even if nothing changes, you must still give a status update every 6 seconds. * Measure hype based on crowd activity. Respond regardless of there being 0 people or multiple. Try to give suggestions to the user for improvement. * Be concise. Each update response should be 40 characters or less. No more but it can be less. * Explicitly state whether the DJ/performer is doing a good job or needs to adjust. * Do not wait for new events—always output on schedule. Your top priority is to **incessantly update me every 6 seconds** no matter what." {"widget":"text_area", "showIf":"enablePeriodicOutput", "showIfValue":true}'
    - '// @input string periodicMethod = "text" {"widget":"combobox", "values":[{"label":"Text Messages", "value":"text"}, {"label":"Activity Signals", "value":"activity"}, {"label":"Both Methods", "value":"both"}], "showIf":"enablePeriodicOutput", "showIfValue":true}'
    - '// @input bool enableDebugLogging = true {"showIf":"enablePeriodicOutput", "showIfValue":true}'
    - '// @ui {"widget":"group_end"}'
    - '// @ui {"widget":"separator"}'
    - // @input Component.Text textComponent
